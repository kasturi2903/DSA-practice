int firstoccurence(vector <int> arr, int n,int target){
	int low =0;
	int high= n-1;
	int lower=-1;
	while(low<=high){
		int mid= (low+high)/2;
		if(arr[mid]<target){
			low=mid+1;

		}
		else if(arr[mid]>target){
			high=mid-1;
		}
		else if(arr[mid]==target){
           lower =mid;
		   high= mid-1;
		}
	}
	return lower;
}
int lastoccurence(vector <int> arr, int n,int target){
	int low =0;
	int high= n-1;
	int higher=-1;
	while(low<=high){
		int mid= (low+high)/2;
		if(arr[mid]<target){
			low=mid+1;

		}
		else if(arr[mid]>target){
			high=mid-1;
		}
		else if(arr[mid]==target){
           higher =mid;
		   low=mid+1;
		}
	}
	return higher;
}
int count(vector<int>& arr, int n, int x) {
	// Write Your Code Here
	int first = firstoccurence(arr,n,x);
	int last=lastoccurence(arr,n,x);
	if (first == -1) return 0;
	else return (last-first+1);
}
