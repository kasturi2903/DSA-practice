class Solution {
public:
    int nDays(vector <int> weigths,int cap){
        int days=1;
        int load= 0;
        for(int i=0;i<weigths.size();i++){
            if(load+weigths[i]>cap){
                days+=1;
                load=weigths[i];
            }
            else{
                load+=weigths[i];
            }
        }
        return days;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int low= *max_element(weights.begin(),weights.end());
        int high= accumulate(weights.begin(),weights.end(),0);
        while(low<=high){
            int mid=(low+high)/2;
            int numDays=  nDays(weights,mid);
            if(numDays<=days){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
};
