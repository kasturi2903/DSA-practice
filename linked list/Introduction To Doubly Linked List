/*
 * Definition for doubly-linked list.
 * class Node
 * {
 * public:
 *    int data;
 *    Node *next, *prev;
 *    Node() : data(0), next(nullptr), prev(nullptr) {}
 *    Node(int x) : data(x), next(nullptr), prev(nullptr) {}
 *    Node(int x, Node *next, Node *prev) : data(x), next(next), prev(prev) {}
 * };
 */

Node* constructDLL(vector<int>& arr) {
    Node* head = nullptr;
    Node* tail = nullptr;

    for (int i = 0; i < arr.size(); i++) {
        Node* ptr = new Node(arr[i]);

        if (head == nullptr) {
            head = ptr;
            tail = ptr;
        } else {
            tail->next = ptr;
            ptr->prev = tail;
            tail = ptr;
        }
    }

    return head;
}

