/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if (head == nullptr || head->next == nullptr) {
            return true;
        }
        ListNode* temp = head;
        vector<int> v;
        while(temp!=nullptr){
            v.push_back(temp->val);
            temp=temp->next;
        }
        vector<int> w;
        int n=v.size()-1;
        for(int i=n;i>=0;i--){
            w.push_back(v[i]);
        }
        for(int i=0;i<v.size();i++){
            if(v[i]!=w[i]){
                return false;
            }
        }
        return true;

    }
};
