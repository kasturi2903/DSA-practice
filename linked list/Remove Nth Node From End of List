/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        int len=0;
        ListNode* temp=head;
        while(temp!=nullptr){
            len++;
            temp=temp->next;
        }
        return len;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int l=length(head);
        if(head==nullptr){
            return nullptr;
        }
        if(n==1 && head->next==nullptr){
            return nullptr;
        }
        int pos= l-n;
        ListNode* p=head;
        ListNode* q= nullptr;
        for(int i=0;i<pos;i++){
            q=p;
            p=p->next;
        }
        if(q==nullptr){
            head=p->next;

        }
        else{
            q->next=p->next;
        }
        return head;

    }
};
