#include <stack>

int prec(char ch){
	if(ch=='+' || ch=='-'){
		return 1;
	}
	else if(ch=='*' || ch=='/'){
		return 2;
	}
	else if (ch=='^'){
		return 3;
	}
	else{
		return -1;
	}
}



string infixToPostfix(string &exp){
	// Write your code here
     stack <char> st;
	 string ans="";
	 for(int i=0;i<exp.size();i++){
        
		if((exp[i]<='9' &&exp[i]>='0')||(exp[i]<='z'&&exp[i]>='a')){
			ans+= exp[i];
		}
		else if (exp[i]=='('){
			st.push(exp[i]);

		}
		else if(exp[i]==')'){
			while(!st.empty() && st.top()!='('){
				ans+=st.top();
				st.pop();
			}
			if(!st.empty()){
				st.pop();
			}
		}
		else{
			while(!st.empty() && (prec(st.top())>=prec(exp[i]))){
				ans+=st.top();
				st.pop();
			}
			st.push(exp[i]);

		}
		

	 }
	 while(!st.empty()){
			ans+=st.top();
			st.pop();
		}
	 return ans;

}












