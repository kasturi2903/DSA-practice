/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root=new TreeNode(preorder[0]);
         TreeNode* current= root;
        for(int i=1;i<preorder.size();i++){
             TreeNode* current= root;
             TreeNode* prev = nullptr;
            TreeNode* node = new TreeNode(preorder[i]);
           while(current!=nullptr){
               prev=current;
               if(preorder[i]>current->val){
                   current = current->right;
               }
               else if(preorder[i]<current ->val){
                   current = current->left;
               }
           }
           if(prev->val<preorder[i]){
               prev->right=node;
           }
           else {
               prev->left=node;
           }

        }
        return root;
    }
};
