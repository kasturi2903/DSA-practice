void maxHeapify(vector <int>& arr,int n,int index){
	int leftChild= 2*index+1;
	int rightChild = 2*index+2;
	int largest = index;
	if(leftChild<n && arr[leftChild]>arr[largest]){
		largest= leftChild;
	}
	if(rightChild<n && arr[rightChild]>arr[largest]){
		largest= rightChild;
	}
	if(largest!= index){
		swap(arr[index], arr[largest]);
        maxHeapify(arr, n, largest);
	}
}

void buildMaxheap(vector <int>&arr, int n){
	for(int i= n/2-1;i>=0;i--){
		maxHeapify(arr,n,i);
	}
}

vector<int>MinToMaxHeap(int n, vector<int>&arr)
{
	// Write your code here.
	buildMaxheap(arr,n);
	return arr;
}
