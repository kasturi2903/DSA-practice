/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
#include<map>
vector<int> bottomView(TreeNode<int> * root){
    // Write your code here.
    vector<int> ans;
    map<int,int> mpp;
    queue<pair<TreeNode<int>*,int>> q;
    q.push({root,0});
    while(!q.empty()){
        auto it = q.front();
        q.pop();
        TreeNode<int>* node= it.first;
        int line= it.second;
        mpp[line]=node->data;
        if(node->left){
            q.push({node->left,line-1});

        }
        if(node->right){
            q.push({node->right,line+1});
            
        }

    }
    for(auto it: mpp){
        ans.push_back(it.second);
    }
    return ans;
}
