/*
 * class Node
 * {
 * public:
 *     int data;
 *     Node *left;
 *     Node *right;
 *     Node() : data(0), left(nullptr), right(nullptr){};
 *     Node(int x) : data(x), left(nullptr), right(nullptr) {}
 *     Node(int x, Node *left, Node *right) : data(x), left(left), right(right) {}
 * };
 */
#include <limits>

int minVal(Node* root) {
    if (root == nullptr) {
        // Return a sentinel value indicating no minimum found
        return -1;
    }
    
    Node* temp = root;
    while (temp->left) {
        temp = temp->left;
    }   
    return temp->data;
}
